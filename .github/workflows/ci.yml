name: CI

on:
  push:
    branches:
      - main
      - next
      - "test/*"
  pull_request:
    types: [assigned, opened, synchronize, reopened, labeled]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  NX_CLOUD_DISTRIBUTED_EXECUTION: true
  NX_BRANCH: ${{ github.event.number || github.ref_name }}

jobs:
  main:
    name: Nx Cloud - Main Job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3

      - name: Install primary node version (see volta config in package.json) and dependencies
        uses: ./.github/actions/install-node-and-dependencies

      - name: Run parallel distributed tasks
        uses: jameshenry/parallel-bash-commands@v1
        with:
          cmd1: npx nx-cloud record -- npx nx format:check
          cmd2: npx nx-cloud record -- npx nx workspace-lint
          cmd3: npx nx-cloud record -- npm run ci:lint
          cmd4: npx nx run-many --target=lint --all --parallel=3
          # TODO: update this once project targets are converted
          cmd5: npx nx run-many --target=test --projects=\"libs-*,nx-*\" --parallel=3

      - run: PUBLISHED_VERSION=999.9.9-e2e.0 npx nx run-many --target=run-e2e-tests-process --parallel=2

      - name: Stop all running agents for this CI run
        # It's important that we always run this step, otherwise in the case of any failures in preceding non-Nx steps, the agents will keep running and waste billable minutes
        if: ${{ always() }}
        run: npx nx-cloud stop-all-agents

  agents:
    name: Nx Cloud - Agent ${{ matrix.agent }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        agent: [1, 2, 3, 4]
    steps:
      - uses: actions/checkout@v3

      - name: Configure git metadata
        run: |
          git config --global user.email test@example.com
          git config --global user.name "Tester McPerson"

      - name: Install primary node version (see volta config in package.json) and dependencies
        uses: ./.github/actions/install-node-and-dependencies

      - run: npm run e2e-start-local-registry

      - run: PUBLISHED_VERSION=999.9.9-e2e.0 npm run e2e-build-package-publish

      - name: Start Nx Agent ${{ matrix.agent }}
        run: npx nx-cloud start-agent
        env:
          NX_AGENT_NAME: ${{matrix.agent}}

  # TODO: migrate to cacheable/distributable targets
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [14, "16.15.0", 18]
        script: ["ci:test:unit", "ci:test:integration"]
    steps:
      - uses: actions/checkout@v3

      - name: Configure git metadata
        run: |
          git config --global user.email test@example.com
          git config --global user.name "Tester McPerson"

      - name: Install node version ${{ matrix.node }} and dependencies
        uses: ./.github/actions/install-node-and-dependencies
        with:
          node-version: ${{ matrix.node }}

      - run: npm run ${{ matrix.script }}

  # TODO: migrate to cacheable/distributable targets
  windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        script: ["ci:test:unit", "ci:test:integration"]
        subset: [publish, non-publish]
    steps:
      - uses: actions/checkout@v3

      - name: Configure git metadata
        run: |
          git config --global user.email test@example.com
          git config --global user.name "Tester McPerson"

      - name: Install primary node version (see volta config in package.json) and dependencies
        uses: ./.github/actions/install-node-and-dependencies

      - run: npm run ${{ matrix.script }}
        env:
          LERNA_CI_TYPE: ${{ matrix.subset }}
          LERNA_OS_TYPE: windows
